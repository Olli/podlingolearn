services:
  whispercpp:
    build:
      dockerfile: "Dockerfile.whispercpp"
      context: .
    volumes:
      #- ./storage/whisper/models:/models:Z
      #- ./vendor/whisper.cpp/build/bin:/app/bin
      #- ./vendor/docker:/app/build/bin
      - whispercpp:/app
  db:
    image: docker.io/postgres
    volumes:
      - podcast_transcribe_postgres_data:/var/lib/postgresql/data
    command: "postgres -c 'max_connections=500'"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - podcast_transcribe_network
  podcast-app:
    build:
      dockerfile: ./Dockerfile
      context: .
    command: "./bin/rails server"
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    volumes:
      - app-storage:/rails/storage
      - whispercpp:/rails/vendor/whisper.cpp
    depends_on:
      - db
      - whispercpp
    ports:
      - "3000:3000"
    networks:
      - podcast_transcribe_network
networks:
  podcast_transcribe_network:
    driver: bridge
volumes:
  podcast_transcribe_postgres_data: {}
  app-storage: {}
  whispercpp: {}
  whispercpp_models:
    driver: local
    driver_opts:
      type: none
      device: ./storage/whisper/models
      o: bind
#pod:
#  web:
# - whispercpp
#   - db
#   - podcast-app
